# Generated by Django 4.0.5 on 2022-09-02 16:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='CollectedData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collected_data', models.CharField(choices=[('IDO', 'Intragravel Dissolved Oxygen'), ('kf', 'Hydraulic Conductivity'), ('SurfSed', 'Surface Sediment Sampling'), ('SubsurfSed', 'Subsurface Sediment Sampling'), ('Hydraulics', 'FlowTracker')], max_length=200, null=True, verbose_name='Measurement Data')),
            ],
        ),
        migrations.CreateModel(
            name='MeasStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='to fill', max_length=100, unique=True)),
                ('date', models.DateField(blank=True, null=True, verbose_name='Date/time of measurement')),
                ('description', models.CharField(blank=True, max_length=400, null=True)),
                ('x', models.FloatField(blank=True, null=True)),
                ('y', models.FloatField(blank=True, null=True)),
                ('x_epsg4326', models.FloatField(blank=True, null=True)),
                ('y_epsg4326', models.FloatField(blank=True, null=True)),
                ('bed_elevation_wgs84', models.FloatField(blank=True, null=True)),
                ('bed_elevation_dhhn', models.FloatField(blank=True, null=True)),
                ('coord_system', models.CharField(max_length=15)),
                ('pos_rel_WB', models.FloatField(blank=True, null=True, verbose_name='Distance from wetted boundary (+ for wetted locations) [m]')),
                ('discharge', models.FloatField(blank=True, null=True, verbose_name='Discharge at recording time [mÂ³/s]')),
                ('wl_m', models.FloatField(blank=True, null=True, verbose_name='Water level measured in-situ at recording time [m]')),
                ('wl_model_m', models.FloatField(blank=True, null=True, verbose_name='Modelled water level [m]')),
                ('algae_cover', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No'), ('BLANK', 'Blank')], max_length=100, null=True)),
                ('imbrication', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No'), ('BLANK', 'Blank')], max_length=100, null=True)),
                ('bed_slope', models.FloatField(blank=True, null=True)),
                ('campaign', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='riveranalyst.campaign')),
                ('collected_data', models.ManyToManyField(to='riveranalyst.collecteddata')),
            ],
        ),
        migrations.CreateModel(
            name='River',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('river', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SedSamplTechnique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('samp_techniques', models.CharField(choices=[('FC', 'Freeze Core'), ('OS', 'Overlayer Sample'), ('US', 'Underlayer Sample'), ('FP', 'Freeze Panel'), ('LS', 'Line Sampling')], max_length=200, null=True, verbose_name='Sediment Sampling Technique')),
            ],
        ),
        migrations.CreateModel(
            name='SurfaceSed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_id', models.CharField(max_length=200)),
                ('operator_name', models.CharField(blank=True, max_length=100, null=True)),
                ('dm', models.FloatField(blank=True, null=True, verbose_name='Dm (Mean grain size) [mm]')),
                ('dg', models.FloatField(blank=True, null=True, verbose_name='Dg (Geom. Mean Grain size) [mm]')),
                ('fi', models.FloatField(blank=True, null=True, verbose_name='Fredle Index [-]')),
                ('std_grain', models.FloatField(blank=True, null=True, verbose_name='Grain size std')),
                ('geom_std_grain', models.FloatField(blank=True, null=True, verbose_name='Dg (Geom. Std of grains)')),
                ('skewness', models.FloatField(blank=True, null=True)),
                ('kurtosis', models.FloatField(blank=True, null=True)),
                ('cu', models.FloatField(blank=True, null=True, verbose_name='Coefficient of uniformity [-]')),
                ('cc', models.FloatField(blank=True, null=True, verbose_name='Curvature coefficient [-]')),
                ('n_carling', models.FloatField(blank=True, null=True, verbose_name='Porosity (Carling & Reader, 1982) [-]')),
                ('n_wu_wang', models.FloatField(blank=True, null=True, verbose_name='Porosity (Wu & Wang, 206) [-]')),
                ('n_wooster', models.FloatField(blank=True, null=True, verbose_name='Porosity (Wooster et al., 2008) [-]')),
                ('n_user', models.FloatField(blank=True, null=True, verbose_name='Porosity (Seitz et al., 2018) [-]')),
                ('d10', models.FloatField(blank=True, null=True, verbose_name='D10 [mm]')),
                ('d16', models.FloatField(blank=True, null=True, verbose_name='D16 [mm]')),
                ('d25', models.FloatField(blank=True, null=True, verbose_name='D25 [mm]')),
                ('d30', models.FloatField(blank=True, null=True, verbose_name='D30 [mm]')),
                ('d50', models.FloatField(blank=True, null=True, verbose_name='D50 [mm]')),
                ('d60', models.FloatField(blank=True, null=True, verbose_name='D60 [mm]')),
                ('d75', models.FloatField(blank=True, null=True, verbose_name='D75 [mm]')),
                ('d84', models.FloatField(blank=True, null=True, verbose_name='D84 [mm]')),
                ('d90', models.FloatField(blank=True, null=True, verbose_name='D90 [mm]')),
                ('so', models.FloatField(blank=True, null=True, verbose_name='Sorting coefficient (Bunte & Abt, 2001) [-]')),
                ('comment', models.CharField(max_length=1000)),
                ('percent_finer_250mm', models.FloatField(blank=True, null=True, verbose_name='<250 mm [%]')),
                ('percent_finer_125mm', models.FloatField(blank=True, null=True, verbose_name='<125 mm [%]')),
                ('percent_finer_63mm', models.FloatField(blank=True, null=True, verbose_name='<63 mm [%]')),
                ('percent_finer_31_5mm', models.FloatField(blank=True, null=True, verbose_name='<31.5 mm [%]')),
                ('percent_finer_16mm', models.FloatField(blank=True, null=True, verbose_name='<16 mm [%]')),
                ('percent_finer_8mm', models.FloatField(blank=True, null=True, verbose_name='<8 mm [%]')),
                ('percent_finer_4mm', models.FloatField(blank=True, null=True, verbose_name='<4 mm [%]')),
                ('percent_finer_2mm', models.FloatField(blank=True, null=True, verbose_name='<2 mm [%]')),
                ('percent_finer_1mm', models.FloatField(blank=True, null=True, verbose_name='<1 mm [%]')),
                ('percent_finer_0_5mm', models.FloatField(blank=True, null=True, verbose_name='<0.5 mm [%]')),
                ('percent_finer_0_25mm', models.FloatField(blank=True, null=True, verbose_name='<0.25 mm [%]')),
                ('percent_finer_0_125mm', models.FloatField(blank=True, null=True, verbose_name='<0.125 mm [%]')),
                ('percent_finer_0_063mm', models.FloatField(blank=True, null=True, verbose_name='<0.063 mm [%]')),
                ('percent_finer_0_031mm', models.FloatField(blank=True, null=True, verbose_name='<0.031 mm [%]')),
                ('meas_station', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='riveranalyst.measstation', verbose_name='Measurement station')),
                ('sampling_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='riveranalyst.sedsampltechnique')),
            ],
        ),
        migrations.CreateModel(
            name='SubsurfaceSed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_id', models.CharField(max_length=200)),
                ('operator_name', models.CharField(blank=True, max_length=100, null=True)),
                ('porosity_sfm', models.FloatField(blank=True, null=True)),
                ('dm', models.FloatField(blank=True, null=True, verbose_name='Dm (Mean grain size) [mm]')),
                ('dg', models.FloatField(blank=True, null=True, verbose_name='Dg (Geom. Mean Grain size) [mm]')),
                ('fi', models.FloatField(blank=True, null=True, verbose_name='Fredle Index [-]')),
                ('std_grain', models.FloatField(blank=True, null=True, verbose_name='Grain size std')),
                ('geom_std_grain', models.FloatField(blank=True, null=True, verbose_name='Dg (Geom. Std of grains)')),
                ('skewness', models.FloatField(blank=True, null=True)),
                ('kurtosis', models.FloatField(blank=True, null=True)),
                ('cu', models.FloatField(blank=True, null=True, verbose_name='Coefficient of uniformity [-]')),
                ('cc', models.FloatField(blank=True, null=True, verbose_name='Curvature coefficient [-]')),
                ('n_carling', models.FloatField(blank=True, null=True, verbose_name='Porosity (Carling & Reader, 1982) [-]')),
                ('n_wu_wang', models.FloatField(blank=True, null=True, verbose_name='Porosity (Wu & Wang, 206) [-]')),
                ('n_wooster', models.FloatField(blank=True, null=True, verbose_name='Porosity (Wooster et al., 2008) [-]')),
                ('n_frings', models.FloatField(blank=True, null=True, verbose_name='Porosity (Frings et al., 2011) [-]')),
                ('n_user', models.FloatField(blank=True, null=True, verbose_name='Porosity (Seitz et al., 2018) [-]')),
                ('d10', models.FloatField(blank=True, null=True, verbose_name='D10 [mm]')),
                ('d16', models.FloatField(blank=True, null=True, verbose_name='D16 [mm]')),
                ('d25', models.FloatField(blank=True, null=True, verbose_name='D25 [mm]')),
                ('d30', models.FloatField(blank=True, null=True, verbose_name='D30 [mm]')),
                ('d50', models.FloatField(blank=True, null=True, verbose_name='D50 [mm]')),
                ('d60', models.FloatField(blank=True, null=True, verbose_name='D60 [mm]')),
                ('d75', models.FloatField(blank=True, null=True, verbose_name='D75 [mm]')),
                ('d84', models.FloatField(blank=True, null=True, verbose_name='D84 [mm]')),
                ('d90', models.FloatField(blank=True, null=True, verbose_name='D90 [mm]')),
                ('so', models.FloatField(blank=True, null=True, verbose_name='Sorting coefficient (Bunte & Abt, 2001) [-]')),
                ('comment', models.CharField(max_length=1000)),
                ('percent_finer_250mm', models.FloatField(blank=True, null=True, verbose_name='<250 mm [%]')),
                ('percent_finer_125mm', models.FloatField(blank=True, null=True, verbose_name='<125 mm [%]')),
                ('percent_finer_63mm', models.FloatField(blank=True, null=True, verbose_name='<63 mm [%]')),
                ('percent_finer_31_5mm', models.FloatField(blank=True, null=True, verbose_name='<31.5 mm [%]')),
                ('percent_finer_16mm', models.FloatField(blank=True, null=True, verbose_name='<16 mm [%]')),
                ('percent_finer_8mm', models.FloatField(blank=True, null=True, verbose_name='<8 mm [%]')),
                ('percent_finer_4mm', models.FloatField(blank=True, null=True, verbose_name='<4 mm [%]')),
                ('percent_finer_2mm', models.FloatField(blank=True, null=True, verbose_name='<2 mm [%]')),
                ('percent_finer_1mm', models.FloatField(blank=True, null=True, verbose_name='<1 mm [%]')),
                ('percent_finer_0_5mm', models.FloatField(blank=True, null=True, verbose_name='<0.5 mm [%]')),
                ('percent_finer_0_25mm', models.FloatField(blank=True, null=True, verbose_name='<0.25 mm [%]')),
                ('percent_finer_0_125mm', models.FloatField(blank=True, null=True, verbose_name='<0.125 mm [%]')),
                ('percent_finer_0_063mm', models.FloatField(blank=True, null=True, verbose_name='<0.063 mm [%]')),
                ('percent_finer_0_031mm', models.FloatField(blank=True, null=True, verbose_name='<0.031 mm [%]')),
                ('meas_station', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='riveranalyst.measstation', verbose_name='Measurement station')),
                ('sampling_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='riveranalyst.sedsampltechnique')),
            ],
        ),
        migrations.AddField(
            model_name='measstation',
            name='river',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='riveranalyst.river'),
        ),
        migrations.CreateModel(
            name='Kf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_id', models.CharField(max_length=200)),
                ('dp_position', models.IntegerField(blank=True, null=True, verbose_name='DP Position [-]')),
                ('sediment_depth_m', models.FloatField(null=True, verbose_name='Riverbed depth [m]')),
                ('kf_ms', models.FloatField(blank=True, null=True, verbose_name='kf [m/s]')),
                ('slurp_rate_avg_mls', models.FloatField(blank=True, null=True, verbose_name='Slurping rate [mg/L]')),
                ('H_m', models.FloatField(blank=True, null=True, verbose_name='Height of filter pipe (Slurping) above bed [m]')),
                ('operator_name', models.CharField(blank=True, max_length=100, null=True)),
                ('comment', models.CharField(max_length=1000)),
                ('meas_station', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='riveranalyst.measstation')),
            ],
        ),
        migrations.CreateModel(
            name='IDO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_id', models.CharField(max_length=200)),
                ('dp_position', models.IntegerField(blank=True, null=True, verbose_name='DP Position [-]')),
                ('sediment_depth_m', models.FloatField(null=True, verbose_name='Riverbed Depth [m]')),
                ('idoc_mgl', models.FloatField(blank=True, null=True, verbose_name='IDOC [mg/l]')),
                ('temp_c', models.FloatField(blank=True, null=True, verbose_name='Temperature [Â°C]')),
                ('idoc_sat', models.FloatField(blank=True, null=True, verbose_name='IDOS [%]')),
                ('H_m', models.FloatField(blank=True, null=True, verbose_name='Height of filter pipe (Slurping) above bed [m]')),
                ('operator_name', models.CharField(blank=True, max_length=100, null=True)),
                ('comment', models.CharField(max_length=1000)),
                ('meas_station', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='riveranalyst.measstation', verbose_name='Measurement station')),
            ],
        ),
        migrations.CreateModel(
            name='Hydraulics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_id', models.CharField(max_length=200)),
                ('v_x_ms', models.FloatField(blank=True, null=True, verbose_name='v_x [m/s]')),
                ('v_y_ms', models.FloatField(blank=True, null=True, verbose_name='v_y [m/s]')),
                ('v_z_ms', models.FloatField(blank=True, null=True, verbose_name='v_z [m/s]')),
                ('kt', models.FloatField(blank=True, null=True, verbose_name='kt/UÂ² [-]')),
                ('kt_2d', models.FloatField(blank=True, null=True, verbose_name='kt 2d/UÂ² [-]')),
                ('v_bulk', models.FloatField(blank=True, null=True, verbose_name='U bulk [m/s]')),
                ('water_temperature', models.FloatField(blank=True, null=True, verbose_name='Water temperature [Â°C]')),
                ('turbidity_ntu', models.FloatField(blank=True, null=True, verbose_name='Turbidity [NTU]')),
                ('operator_name', models.CharField(blank=True, max_length=100, null=True)),
                ('ship_influence', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No'), ('BLANK', 'Blank')], max_length=100, null=True)),
                ('meas_station', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='riveranalyst.measstation')),
            ],
        ),
    ]
